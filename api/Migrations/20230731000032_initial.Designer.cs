// <auto-generated />
using System;
using IPKP___API.Controllers.Models.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPKP___API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230731000032_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BestSellersStock_Item", b =>
                {
                    b.Property<Guid>("BestSellersBestSeller_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BestSellersBestSeller_ID", "Stock_Item_ID");

                    b.HasIndex("Stock_Item_ID");

                    b.ToTable("BestSellersStock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Admin", b =>
                {
                    b.Property<Guid>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cell_Number")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("User_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Admin_ID");

                    b.HasIndex("User_ID1");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Basket", b =>
                {
                    b.Property<Guid>("Basket_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Basket_ID");

                    b.Property<int>("Basket_Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Basket_Quantity");

                    b.Property<Guid?>("Customer_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Customer_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Basket_ID");

                    b.HasIndex("Customer_ID1");

                    b.HasIndex("Stock_Item_ID1");

                    b.ToTable("Basket");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.BestSellers", b =>
                {
                    b.Property<Guid>("BestSeller_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BestSeller_ID");

                    b.Property<Guid>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Stock_Item_ID");

                    b.HasKey("BestSeller_ID");

                    b.ToTable("BestSellers");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Customer", b =>
                {
                    b.Property<Guid>("Customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cell_Number")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("User_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Customer_ID");

                    b.HasIndex("User_ID1");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Delivery_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Address_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Address_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Company_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Company_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Delivery_Price")
                        .HasColumnType("float");

                    b.Property<int>("Tracking_Number")
                        .HasColumnType("int");

                    b.HasKey("Delivery_ID");

                    b.HasIndex("Delivery_Address_ID1");

                    b.HasIndex("Delivery_Company_ID1");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery_Address", b =>
                {
                    b.Property<Guid>("Delivery_Address_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Delivery_Address_ID");

                    b.Property<string>("AreaCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Province")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StreetName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Delivery_Address_ID");

                    b.ToTable("Delivery_Address");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery_Company", b =>
                {
                    b.Property<Guid>("Delivery_Company_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Delivery_Company_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Delivery_Company_ID");

                    b.ToTable("Delivery_Companies");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Design_Image", b =>
                {
                    b.Property<Guid>("Design_Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Design_Image_Size")
                        .HasColumnType("int");

                    b.Property<Guid?>("Design_Price_Pixel_AmountDesign_Price_History_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Design_Image_ID");

                    b.HasIndex("Design_Price_Pixel_AmountDesign_Price_History_ID");

                    b.ToTable("Design_Images");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Design_Price_History", b =>
                {
                    b.Property<Guid>("Design_Price_History_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Design_Price_Pixel_Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Effective_From_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_To_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Design_Price_History_ID");

                    b.ToTable("Design_Price_History");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Design_Text", b =>
                {
                    b.Property<Guid>("Design_Text_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Design_Price_Pixel_AmountDesign_Price_History_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Design_Text_Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Design_Text_Size")
                        .HasColumnType("int");

                    b.HasKey("Design_Text_ID");

                    b.HasIndex("Design_Price_Pixel_AmountDesign_Price_History_ID");

                    b.ToTable("Design_Texts");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Discount", b =>
                {
                    b.Property<Guid>("Discount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Discount_Amount")
                        .HasColumnType("float");

                    b.Property<string>("Discount_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Effective_From_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_To_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Discount_ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Employee", b =>
                {
                    b.Property<Guid>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cell_Number")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("User_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Employee_ID");

                    b.HasIndex("User_ID1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Experience_Rating", b =>
                {
                    b.Property<Guid>("Experience_Rating_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Customer_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Experience_Rating_Comments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Experience_Star_Rating")
                        .HasColumnType("int");

                    b.HasKey("Experience_Rating_ID");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Experience_Rating");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Image", b =>
                {
                    b.Property<Guid>("Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image_File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Image_Size")
                        .HasColumnType("int");

                    b.HasKey("Image_ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Inventory", b =>
                {
                    b.Property<Guid>("Inventory_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Inventory_ID");

                    b.Property<string>("Inventory_Comments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Inventory_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Inventory_ID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Inventory_Line_Item", b =>
                {
                    b.Property<Guid>("Inventory_Line_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Inventory_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Inventory_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Inventory_Line_Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Inventory_Line_Item_ID");

                    b.HasIndex("Inventory_ID1");

                    b.HasIndex("Stock_Item_ID1");

                    b.ToTable("Inventory_Line_Items");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Invoice_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Delivery_Price")
                        .HasColumnType("float");

                    b.Property<Guid?>("Invoice_Discount_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Invoice_Total_VAT")
                        .HasColumnType("float");

                    b.Property<double>("Invoice_Total_exclVAT")
                        .HasColumnType("float");

                    b.Property<double>("Invoice_Total_inclVAT")
                        .HasColumnType("float");

                    b.HasKey("Invoice_ID");

                    b.HasIndex("Invoice_Discount_ID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Invoice_Discount", b =>
                {
                    b.Property<Guid>("Invoice_Discount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Discount_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discount_Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Invoice_Discount_ID");

                    b.HasIndex("Discount_ID");

                    b.ToTable("Invoice_Discount");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("Order_Request_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Order_Status_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Order_ID");

                    b.HasIndex("Order_Request_ID");

                    b.HasIndex("Order_Status_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Order_Request", b =>
                {
                    b.Property<Guid>("Order_Request_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Customer_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Customer_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Address_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Delivery_Address_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Invoice_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Invoice_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Order_Request_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Order_Request_Total_Price")
                        .HasColumnType("float");

                    b.HasKey("Order_Request_ID");

                    b.HasIndex("Customer_ID1");

                    b.HasIndex("Delivery_Address_ID1");

                    b.HasIndex("Invoice_ID1");

                    b.ToTable("Order_Requests");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Order_Status", b =>
                {
                    b.Property<Guid>("Order_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Order_Status_Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Order_Status_ID");

                    b.ToTable("Order_Statuses");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Payment", b =>
                {
                    b.Property<Guid>("Payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Invoice_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Payment_Amount")
                        .HasColumnType("float");

                    b.HasKey("Payment_ID");

                    b.HasIndex("Invoice_ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Payment_Type", b =>
                {
                    b.Property<Guid>("Payment_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payment_Type_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Payment_Type_ID");

                    b.ToTable("Payment_Types");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Permission", b =>
                {
                    b.Property<Guid>("Permission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Permission_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Permission_ID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Personalisation_Design", b =>
                {
                    b.Property<Guid>("Personalisation_Design_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DesignText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Design_Image_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Design_Text_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Personalisation_Design_Price")
                        .HasColumnType("float");

                    b.Property<string>("TextColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextPosition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Personalisation_Design_ID");

                    b.HasIndex("Design_Image_ID");

                    b.HasIndex("Design_Text_ID");

                    b.ToTable("Personalisation_Designs");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Product_Rating", b =>
                {
                    b.Property<Guid>("Product_Rating_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Customer_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Product_Rating_Comments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Product_Star_Rating")
                        .HasColumnType("int");

                    b.HasKey("Product_Rating_ID");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Product_Ratings");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Refund", b =>
                {
                    b.Property<Guid>("Refund_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Customer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Customer_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Refund_Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("Refund_Policy_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Refund_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Refund_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Refund_Policy_ID");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Refund_Policy", b =>
                {
                    b.Property<Guid>("Refund_Policy_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Refund_Policy_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Refund_Policy_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Refund_Policy_Version")
                        .HasColumnType("int");

                    b.HasKey("Refund_Policy_ID");

                    b.ToTable("Refund_Policies");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Refund_Reason", b =>
                {
                    b.Property<Guid>("Refund_Reason_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Refund_Reason_Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Refund_Reason_ID");

                    b.ToTable("Refund_Reasons");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Image", b =>
                {
                    b.Property<Guid>("Stock_Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Stock_Image_ID");

                    b.Property<string>("Stock_Image_File")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Stock_Image_ID");

                    b.ToTable("Stock_Images");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Item", b =>
                {
                    b.Property<Guid>("Stock_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Stock_Item_ID");

                    b.Property<Guid>("Stock_Image_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Image_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Stock_Item_Colour_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_Colour_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Stock_Item_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Stock_Item_Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Stock_Item_Size")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("Stock_Type_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Type_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Stock_Item_ID");

                    b.HasIndex("Stock_Image_ID1");

                    b.HasIndex("Stock_Item_Colour_ID1");

                    b.HasIndex("Stock_Type_ID1");

                    b.ToTable("Stock_Items");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Item_Colour", b =>
                {
                    b.Property<Guid>("Stock_Item_Colour_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Stock_Item_Colour_ID");

                    b.Property<string>("Stock_Item_Colour_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Stock_Item_Colour_ID");

                    b.ToTable("Stock_Item_Colours");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Price_History", b =>
                {
                    b.Property<Guid>("Stock_Price_History_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Effective_From_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_To_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Stock_Price_Amount")
                        .HasColumnType("float");

                    b.HasKey("Stock_Price_History_ID");

                    b.HasIndex("Stock_Item_ID1");

                    b.ToTable("Stock_Price_Histories");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Type", b =>
                {
                    b.Property<Guid>("Stock_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Stock_Type_ID");

                    b.Property<string>("Stock_Type_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Stock_Type_ID");

                    b.ToTable("Stock_Types");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User", b =>
                {
                    b.Property<Guid>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Role_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_Role_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.HasIndex("User_Role_ID1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User_Role", b =>
                {
                    b.Property<int>("User_Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("User_Role_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("User_Role_ID");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User_Role_Permission", b =>
                {
                    b.Property<Guid>("User_Role_Permission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Permission_ID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Permission_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("User_Role_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_Role_ID1")
                        .HasColumnType("int");

                    b.HasKey("User_Role_Permission_ID");

                    b.HasIndex("Permission_ID1");

                    b.HasIndex("User_Role_ID1");

                    b.ToTable("User_Role_Permissions");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Write_Off", b =>
                {
                    b.Property<Guid>("Write_Off_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Write_Off_ID");

                    b.Property<Guid?>("Inventory_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Inventory_ID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Write_Off_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Write_Off_ID");

                    b.HasIndex("Inventory_ID1");

                    b.ToTable("Write_Offs");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Write_Off_Line_Item", b =>
                {
                    b.Property<Guid>("Write_Off_Line_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Write_Off_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Write_Off_Quantity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Write_Off_Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Write_Off_Line_Item_ID");

                    b.HasIndex("Stock_Item_ID");

                    b.HasIndex("Write_Off_ID");

                    b.ToTable("Write_Off_Line_Items");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Product_RatingStock_Item", b =>
                {
                    b.Property<Guid>("Product_Rating_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Stock_Item_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Product_Rating_ID", "Stock_Item_ID");

                    b.HasIndex("Stock_Item_ID");

                    b.ToTable("Product_RatingStock_Item");
                });

            modelBuilder.Entity("BestSellersStock_Item", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.BestSellers", null)
                        .WithMany()
                        .HasForeignKey("BestSellersBestSeller_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", null)
                        .WithMany()
                        .HasForeignKey("Stock_Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Admin", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.User", "User")
                        .WithMany("Admin")
                        .HasForeignKey("User_ID1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Basket", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Customer", "Customer")
                        .WithMany("Basket")
                        .HasForeignKey("Customer_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", "Stock_Item")
                        .WithMany("Basket")
                        .HasForeignKey("Stock_Item_ID1");

                    b.Navigation("Customer");

                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Customer", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.User", "User")
                        .WithMany("Customer")
                        .HasForeignKey("User_ID1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Delivery_Address", "Delivery_Address")
                        .WithMany("Delivery")
                        .HasForeignKey("Delivery_Address_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Delivery_Company", "Delivery_Company")
                        .WithMany("Delivery")
                        .HasForeignKey("Delivery_Company_ID1");

                    b.Navigation("Delivery_Address");

                    b.Navigation("Delivery_Company");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Design_Image", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Design_Price_History", "Design_Price_Pixel_Amount")
                        .WithMany()
                        .HasForeignKey("Design_Price_Pixel_AmountDesign_Price_History_ID");

                    b.Navigation("Design_Price_Pixel_Amount");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Design_Text", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Design_Price_History", "Design_Price_Pixel_Amount")
                        .WithMany()
                        .HasForeignKey("Design_Price_Pixel_AmountDesign_Price_History_ID");

                    b.Navigation("Design_Price_Pixel_Amount");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Employee", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.User", "User")
                        .WithMany("Employee")
                        .HasForeignKey("User_ID1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Experience_Rating", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Inventory_Line_Item", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Inventory", "Inventory")
                        .WithMany("Inventory_Line_Item")
                        .HasForeignKey("Inventory_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", "Stock_Item")
                        .WithMany("Inventory_Line_Item")
                        .HasForeignKey("Stock_Item_ID1");

                    b.Navigation("Inventory");

                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Invoice", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Invoice_Discount", "Invoice_Discount")
                        .WithMany()
                        .HasForeignKey("Invoice_Discount_ID");

                    b.Navigation("Invoice_Discount");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Invoice_Discount", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("Discount_ID");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Order", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Order_Request", "Order_Request")
                        .WithMany()
                        .HasForeignKey("Order_Request_ID");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Order_Status", "Order_Status")
                        .WithMany()
                        .HasForeignKey("Order_Status_ID");

                    b.Navigation("Order_Request");

                    b.Navigation("Order_Status");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Order_Request", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Customer", "Customer")
                        .WithMany("Order_Request")
                        .HasForeignKey("Customer_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Delivery_Address", "Delivery_Address")
                        .WithMany("Order_Request")
                        .HasForeignKey("Delivery_Address_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Invoice", "Invoice")
                        .WithMany("Order_Request")
                        .HasForeignKey("Invoice_ID1");

                    b.Navigation("Customer");

                    b.Navigation("Delivery_Address");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Payment", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("Invoice_ID");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Personalisation_Design", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Design_Image", "Design_Image")
                        .WithMany()
                        .HasForeignKey("Design_Image_ID");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Design_Text", "Design_Text")
                        .WithMany()
                        .HasForeignKey("Design_Text_ID");

                    b.Navigation("Design_Image");

                    b.Navigation("Design_Text");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Product_Rating", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Refund", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Refund_Policy", "Refund_Policy")
                        .WithMany()
                        .HasForeignKey("Refund_Policy_ID");

                    b.Navigation("Customer");

                    b.Navigation("Refund_Policy");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Item", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Image", "Stock_Image")
                        .WithMany("Stock_Item")
                        .HasForeignKey("Stock_Image_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item_Colour", "Stock_Item_Colour")
                        .WithMany("Stock_Item")
                        .HasForeignKey("Stock_Item_Colour_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Type", "Stock_Type")
                        .WithMany("Stock_Item")
                        .HasForeignKey("Stock_Type_ID1");

                    b.Navigation("Stock_Image");

                    b.Navigation("Stock_Item_Colour");

                    b.Navigation("Stock_Type");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Price_History", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", "Stock_Item")
                        .WithMany("Stock_Price_History")
                        .HasForeignKey("Stock_Item_ID1");

                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.User_Role", "User_Role")
                        .WithMany("User")
                        .HasForeignKey("User_Role_ID1");

                    b.Navigation("User_Role");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User_Role_Permission", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Permission", "Permission")
                        .WithMany("User_Role_Permission")
                        .HasForeignKey("Permission_ID1");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.User_Role", "User_Role")
                        .WithMany("User_Role_Permission")
                        .HasForeignKey("User_Role_ID1");

                    b.Navigation("Permission");

                    b.Navigation("User_Role");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Write_Off", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("Inventory_ID1");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Write_Off_Line_Item", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", "Stock_Item")
                        .WithMany()
                        .HasForeignKey("Stock_Item_ID");

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Write_Off", "Write_Off")
                        .WithMany()
                        .HasForeignKey("Write_Off_ID");

                    b.Navigation("Stock_Item");

                    b.Navigation("Write_Off");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Product_RatingStock_Item", b =>
                {
                    b.HasOne("IPKP___API.Controllers.Models.Entities.Product_Rating", null)
                        .WithMany()
                        .HasForeignKey("Product_Rating_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPKP___API.Controllers.Models.Entities.Stock_Item", null)
                        .WithMany()
                        .HasForeignKey("Stock_Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Customer", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("Order_Request");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery_Address", b =>
                {
                    b.Navigation("Delivery");

                    b.Navigation("Order_Request");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Delivery_Company", b =>
                {
                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Inventory", b =>
                {
                    b.Navigation("Inventory_Line_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Invoice", b =>
                {
                    b.Navigation("Order_Request");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Permission", b =>
                {
                    b.Navigation("User_Role_Permission");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Image", b =>
                {
                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Item", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("Inventory_Line_Item");

                    b.Navigation("Stock_Price_History");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Item_Colour", b =>
                {
                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.Stock_Type", b =>
                {
                    b.Navigation("Stock_Item");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("IPKP___API.Controllers.Models.Entities.User_Role", b =>
                {
                    b.Navigation("User");

                    b.Navigation("User_Role_Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
